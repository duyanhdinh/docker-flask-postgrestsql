version: "3"
services:
  api:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
      args:
        - APP_ENV=${APP_ENV}
    depends_on:
      - database
    ports:
      - "${API_PORT}:80"
      - "${JUPYTER_PORT}:8888"
      - "${APIDOC_PORT}:5000"
    env_file:
      - .env
      - app/flask/.env
    volumes:
      - ./app/flask:/app
      - ./app/apidoc:/apidoc
    command: flask run --host=0.0.0.0 --port=${API_PORT}
    networks:
      - api

  apidoc:
    build:
      context: .
      dockerfile: ./docker/apidoc/Dockerfile
      args:
        - APIDOC_PORT=${APIDOC_PORT}
        - APIDOC_OUTPUT=${APIDOC_OUTPUT}
    env_file:
      - .env
    volumes:
      - ./app:/app
    command: ${APIDOC_OUTPUT}
    networks:
      - api


  database:
    image: library/postgres:alpine
    restart: always
    ports:
      - "${DB_PORT}:5432"
    env_file:
      - .env
      - app/flask/.env
    environment:
      PGDATA: ${VOLUME_DB}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres:${VOLUME_DB}
    networks:
      - api

networks:
  api:

volumes:
  postgres:


